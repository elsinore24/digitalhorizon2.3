/* Basic styles for NarrativeReader - Adapt as needed */

.narrativeContainer {
  position: fixed;
  bottom: 20px; /* Further lowered container position */
  left: 50%;
  transform: translateX(-50%);
  width: 90%;
  max-width: 800px;
  z-index: 1000;
  color: white;
  padding-bottom: 60px;
}

.narrativeBox {
  background: transparent; /* Removed black background */
  /* border: 1px solid var(--color-primary); Removed border */
  border-radius: 4px; // Revert to original value
  padding: 20px;
  box-shadow: 0 0 20px rgba(0, 255, 255, 0.2);
  display: flex;
  flex-direction: column;
  gap: 15px;
  position: relative; // Added for arrow positioning context
  overflow: hidden; /* Added for image clipping */
}

/* Styles for the arrow buttons */
.prevArrow,
.nextArrow {
  display: none; /* Hide pagination arrows */
  position: absolute;
  top: 50%; /* Position vertically centered */
  transform: translateY(-50%);
  background-color: rgba(var(--color-primary-rgb), 0.7);
  color: white;
  border: 1px solid rgba(var(--color-primary-rgb), 0.8);
  border-radius: 50%;
  width: 40px;
  height: 40px;
  align-items: center;
  justify-content: center;
  font-size: 18px;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.2s ease, opacity 0.2s ease;
  z-index: 1001;

  &:hover:not(:disabled) {
    background-color: rgba(var(--color-primary-rgb), 0.9);
    transform: translateY(-50%) scale(1.1);
  }

  &:disabled {
    opacity: 0.4;
    cursor: not-allowed;
  }
}

.prevArrow {
  left: 20px; /* Increased spacing from edge */
}

.nextArrow {
  right: 20px; /* Increased spacing from edge */
}

.narrativeText {
  font-size: 18px;
  line-height: 1.6;
  font-family: 'Arial', sans-serif;
  text-align: left;
  height: 30vh;
  max-height: 350px; /* Updated max-height */
  overflow-y: auto; /* Allow scrolling */
  padding: 20px 50px;
  scroll-behavior: smooth; /* Smooth scrolling */

  .pageContent {
    margin-bottom: 30px;
    &:last-child {
      margin-bottom: 0;
    }
  }
}

@media (max-width: 768px) {
  .narrativeText {
    height: 30vh;
    padding: 15px 30px;
  }
}

.navigation {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 10px;
  border-top: 1px solid rgba(var(--color-primary-rgb), 0.3);
  padding-top: 15px;

  button {
    background-color: var(--color-primary);
    color: black;
    border: none;
    padding: 8px 15px;
    border-radius: 4px;
    cursor: pointer;
    font-weight: bold;
    transition: background-color 0.2s ease;

    &:hover:not(:disabled) {
      /* background-color: lighten(var(--color-primary), 10%); Replaced due to Sass error */
      filter: brightness(1.1); /* Apply brightness filter on hover instead */
    }

    &:disabled {
      background-color: #555;
      color: #aaa;
      cursor: not-allowed;
    }
  }

  span {
    font-size: 14px;
    color: var(--color-secondary); /* Assuming a secondary color variable */
  }
}

/* Add these styles */
.lunarImageContainer {
  position: relative;
  width: 180%; /* Double the width */
  left: -40%; /* Center the doubled width */
  margin-bottom: 15px;
  opacity: 0;
  transition: opacity 2s ease-in;
  overflow: hidden;
  border-radius: 0;
  height: auto;
  max-height: 60vh;
  aspect-ratio: 16/9;
}

.lunarImage {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: contain; /* Changed from cover to maintain aspect ratio */
  object-position: center;
}

// Style to trigger the fade-in
.fadeInActive {
  opacity: 1;
}

// Ensure image container is also hidden when data perception mode is active
.hidden .lunarImageContainer {
   display: none;
}


// Class to explicitly hide the container
.hidden {
  display: none !important;
}

/* Media query for smaller screens */
@media (max-width: 768px) {
  .lunarImageContainer {
    max-height: 70vh; /* More flexible height for mobile */
    aspect-ratio: 4/3; /* Better mobile aspect ratio */
    border-radius: 0;
  }
}
